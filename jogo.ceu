#include "sdl.ceu"
input void SDL_REDRAW;
input void SDL_QUIT;
input _SDL_KeyboardEvent* SDL_KEYDOWN;
var _SDL_Window* win;
    finalize
        win = _SDL_CreateWindow("Pong", 0, 0, 640, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(win);
    end
native do
    SDL_Renderer* REN = NULL;
end
finalize
    _REN = _SDL_CreateRenderer(win, -1, 0);
with
    _SDL_DestroyRenderer(_REN);
end
_srand(_time(null));
class Ball with
  var _SDL_Rect m_rect;
  var _SDL_Rect[] m_p1;
  var _SDL_Rect[] m_p2;
  var int m_dt;
  var int m_dx;
  var int m_dy;
do
  m_rect.w = 10;
  m_rect.h = 10;
  m_rect.x = 640/2 - m_rect.w/2;
  m_rect.y = 480/2 - m_rect.h/2;
  par/or do
    loop do
      await (m_dt)ms;
      if _SDL_HasIntersection(&m_rect, m_p1) or _SDL_HasIntersection(&m_rect, m_p2) then
        m_dx = -m_dx;
      end
    end
  with
    loop do
      await 5000ms;
      if m_dx > 0 then
        m_dx = m_dx + 1;
      else
        m_dx = m_dx - 1;
      end
    end
  with
    loop do
      await (m_dt)ms;
      if (m_rect.x + m_rect.w) > 640 or (m_rect.x <= 0)then
        m_dx = -m_dx;
      end
      if (m_rect.y + m_rect.h) > 480 or (m_rect.y <= 0)then
        m_dy = -m_dy;
      end
      m_rect.x = m_rect.x + m_dx;
      m_rect.y = m_rect.y + m_dy;
    end
  with
    loop do
      await SDL_REDRAW;
      _SDL_SetRenderDrawColor(_REN, 0x00,0x00,0x00,0x00);
      _SDL_RenderFillRect(_REN, &m_rect);
    end
  end
end
class Player with
  var _SDL_Rect m_rect;
  var int m_dy;
  var int m_up;
  var int m_down;
do
  m_rect.w = 50;
  m_rect.h = 50;
  m_dy = 16;
  par/or do
    loop do
      var _SDL_KeyboardEvent* key;
      every key in SDL_KEYDOWN do
        if key:keysym.sym == m_up and m_rect.y > 0 then
          m_rect.y = m_rect.y - m_dy;  
        else/if key:keysym.sym == m_down and (m_rect.y + m_rect.h) <= 480 then
          m_rect.y = m_rect.y + m_dy;
        end
      end
    end
  with
    loop do
      await SDL_REDRAW;
      _SDL_SetRenderDrawColor(_REN, 0x00,0x00,0xFF,0x00);
      _SDL_RenderFillRect(_REN, &m_rect);
    end
  end
end
par/or do
  loop do
    await SDL_REDRAW;
    _SDL_SetRenderDrawColor(_REN, 0xFF,0xFF,0xFF,0x00);
    _SDL_RenderFillRect(_REN, null);
  end
with
  var Player pl1 with
    this.m_rect.x = 0;
    this.m_rect.y = 0;
    this.m_up = _SDLK_UP;
    this.m_down = _SDLK_DOWN;
  end;
  var Player pl2 with
    this.m_rect.x = 640 - 50;
    this.m_rect.y = 0;
    this.m_up = _SDLK_UP;
    this.m_down = _SDLK_DOWN;
  end;
  var Ball ball with
    this.m_p1 = &pl1.m_rect;
    this.m_p2 = &pl2.m_rect;
    this.m_dt = 10;
    this.m_dx = -2 + (_rand()%5);
    this.m_dy = -2 + (_rand()%5);
    if this.m_dx == 0 then
      this.m_dx = 1;
    end
    if this.m_dy == 0 then
      this.m_dy = 1;
    end
  end;
  await FOREVER;
with
  loop do
    await SDL_REDRAW;
    _SDL_RenderPresent(_REN);
  end
with
  await SDL_QUIT;
end
escape 0;